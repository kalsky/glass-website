spec_version: 1

scripts:
  init.sh: >
    #!/bin/bash
    apt-get update
    apt install curl -y
    curl -sL https://deb.nodesource.com/setup_10.x | bash -
    apt install nodejs
    apt-get install nginx -y
    git clone https://github.com/kalsky/glass-website --depth 1 --branch=master /var/www/website
    cd /etc/nginx/sites-available/
    cp default default.backup

    cat << EOF > ./default
    server {
    listen $PORT default_server;
    listen [::]:$PORT default_server;
    root /var/www/website;
    server_name _;
    index index.html index.htm;
    location /api {   
      proxy_http_version 1.1;
      proxy_set_header Upgrade \$http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host \$host;
      proxy_cache_bypass \$http_upgrade;
      proxy_read_timeout 600s;
    }
    location / {
      try_files \$uri /index.html;
    }
    }
    EOF
  start.sh: >
    #!/bin/bash
    service nginx stop
    service nginx start

applications:
  website:
    spec_version: 1
    kind: application

    inputs:
      - PORT: 80
      - AZURE_VM_SIZE: Standard_B1s

    infrastructure:
      compute:
        spec:
          azure:
            vm_size: $AZURE_VM_SIZE

      # Port 80 will be opened externally to receive web requests
      connectivity:
        external:
          - web:
              port: $PORT

    # This is a clean Ubuntu server image that will be
    # used to create a new EC2 instance in the defined AWS region
    source:
      os_type: linux
      image:
        azure_image:
        - urn: Canonical:UbuntuServer:16.04-LTS:latest
          username: adminuser

    configuration:
      initialization:
        script: init.sh
      # This command restarts the Apache server after the initialization completes
      start:
        script: start.sh
      # To validate the installation, we wait to see that the ports are available
      healthcheck:
        wait_for_ports: ALL
        timeout: 180

    debugging: 
      connection_protocol: SSH

blueprint:
  glass-website:
    spec_version: 1
    kind: blueprint
    metadata:
      description: >
        glass-website
        
    clouds: 
      - Azure: westus2
      
    inputs:
    - PORT: 80
    - AZURE_VM_SIZE: Standard_B1s

    applications:
      - glass:
          input_values:
            - PORT: $PORT
            - AZURE_VM_SIZE: $AZURE_VM_SIZE

    debugging:
      availability: on